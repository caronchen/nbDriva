/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.componio.opencms.projectstructure.plugin.dialogs;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import org.apache.tools.ant.module.api.support.ActionUtils;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.util.Exceptions;

/**
 *
 * @author Tom
 */
public class CreateNewResourceTypePanel extends javax.swing.JPanel {

    private FileObject buildScript;
    private FileObject projectDirectory;

    private String ide_project;

    /**
     * Creates new form CreateNewResourceTypePanel
     */
    public CreateNewResourceTypePanel(FileObject buildScript, FileObject projectDirectory) {
        initComponents();
        initVariables(buildScript, projectDirectory);
        initPaths();
    }

    private void initVariables(FileObject buildScript, FileObject projectDirectory) {
        this.buildScript = buildScript;
        this.projectDirectory = projectDirectory;
    }

    private void initPaths() {
        File project = new File(projectDirectory.getPath());
        ide_project = project.exists() ? project.getAbsolutePath().replace("\\", "/") : "";
    }

    private Properties getModuleProperties(String individualConfigFile, String defaultConfigFile) throws FileNotFoundException, IOException {
        Properties module_properties = new Properties();
        FileInputStream inputStream = null;
        inputStream = new FileInputStream(individualConfigFile);
        module_properties.load(inputStream);

        inputStream = new FileInputStream(defaultConfigFile);
        Properties default_props = new Properties();
        default_props.load(inputStream);

        for (String key : default_props.stringPropertyNames()) {
            if (!module_properties.containsKey(key)) {
                module_properties.put(key, default_props.getProperty(key));
            }
        }
        return module_properties;
    }

    private void generateCmsShellScriptForNewResourceType(String individualConfig, String defaultConfig) throws IOException {
        File scripts = new File(projectDirectory.getFileObject("scripts").getPath());
        String ide_scripts = scripts.exists() ? scripts.getAbsolutePath().replace("\\", "/") : "";
        if (scripts.exists() && scripts.isDirectory()) {
            File createNewResourceType = new File(ide_scripts + "/" + "createNewResourceType.txt");
            Properties props = getModuleProperties(individualConfig, defaultConfig);
            StringBuilder builder = new StringBuilder();
            builder.append("echo on\n");
            builder.append("login \"")
                    .append(props.getProperty("username")).append("\" \"")
                    .append(props.getProperty("password")).append("\"\n");
            builder.append("setCurrentProject \"Offline\"\n");
            builder.append("createNewResourceType ")
                    .append("\"").append(props.getProperty("modulename")).append("\" ")
                    .append("\"").append(textfield_resource_type_id.getText()).append("\" ")
                    .append("\"").append(textfield_resource_type_name.getText()).append("\" ")
                    .append("\"").append(textfield_resource_type_nice_name.getText()).append("\" ")
                    .append("\"").append(textfield_resource_type_title.getText()).append("\" ")
                    .append("\"").append(textfield_resource_type_description.getText()).append("\" ")
                    .append("\"").append(textfield_schema_type_name.getText()).append("\" ")
                    .append("\"").append(ide_project).append("\" ")
                    .append("\"").append(textfield_icon.getText()).append("\"\n");
            builder.append("publishResources \"")
                    .append(props.getProperty("modulepath")).append("/")
                    .append(props.getProperty("modulename")).append("\" true\n");
            FileWriter filewriter = new FileWriter(createNewResourceType, false);
            BufferedWriter writer = new BufferedWriter(filewriter);
            writer.write(builder.toString());
            writer.close();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_resource_type_id = new javax.swing.JLabel();
        label_resource_type_name = new javax.swing.JLabel();
        label_resource_type_nice_name = new javax.swing.JLabel();
        label_resource_type_title = new javax.swing.JLabel();
        label_schema_type_name = new javax.swing.JLabel();
        textfield_resource_type_id = new javax.swing.JTextField();
        textfield_resource_type_name = new javax.swing.JTextField();
        textfield_resource_type_nice_name = new javax.swing.JTextField();
        textfield_resource_type_title = new javax.swing.JTextField();
        label_resource_type_description = new javax.swing.JLabel();
        textfield_resource_type_description = new javax.swing.JTextField();
        textfield_schema_type_name = new javax.swing.JTextField();
        button_save = new javax.swing.JButton();
        button_cancel = new javax.swing.JButton();
        label_icon = new javax.swing.JLabel();
        textfield_icon = new javax.swing.JTextField();
        button_icon = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(label_resource_type_id, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_resource_type_id.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(label_resource_type_name, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_resource_type_name.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(label_resource_type_nice_name, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_resource_type_nice_name.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(label_resource_type_title, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_resource_type_title.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(label_schema_type_name, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_schema_type_name.text")); // NOI18N

        textfield_resource_type_id.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_resource_type_id.text")); // NOI18N

        textfield_resource_type_name.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_resource_type_name.text")); // NOI18N

        textfield_resource_type_nice_name.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_resource_type_nice_name.text")); // NOI18N

        textfield_resource_type_title.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_resource_type_title.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(label_resource_type_description, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_resource_type_description.text")); // NOI18N

        textfield_resource_type_description.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_resource_type_description.text")); // NOI18N

        textfield_schema_type_name.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_schema_type_name.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(button_save, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.button_save.text")); // NOI18N
        button_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(button_cancel, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.button_cancel.text")); // NOI18N
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(label_icon, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.label_icon.text")); // NOI18N

        textfield_icon.setText(org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.textfield_icon.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(button_icon, org.openide.util.NbBundle.getMessage(CreateNewResourceTypePanel.class, "CreateNewResourceTypePanel.button_icon.text")); // NOI18N
        button_icon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_iconActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button_save, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_cancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_resource_type_id)
                            .addComponent(label_resource_type_name)
                            .addComponent(label_resource_type_nice_name)
                            .addComponent(label_resource_type_title)
                            .addComponent(label_resource_type_description)
                            .addComponent(label_schema_type_name)
                            .addComponent(label_icon))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textfield_resource_type_id)
                            .addComponent(textfield_resource_type_name)
                            .addComponent(textfield_resource_type_nice_name)
                            .addComponent(textfield_resource_type_title)
                            .addComponent(textfield_resource_type_description)
                            .addComponent(textfield_schema_type_name, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                            .addComponent(textfield_icon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(button_icon)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_resource_type_id)
                    .addComponent(textfield_resource_type_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_resource_type_name)
                    .addComponent(textfield_resource_type_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_resource_type_nice_name)
                    .addComponent(textfield_resource_type_nice_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_resource_type_title)
                    .addComponent(textfield_resource_type_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_resource_type_description)
                    .addComponent(textfield_resource_type_description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfield_schema_type_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_schema_type_name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_icon)
                    .addComponent(textfield_icon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_icon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_save)
                    .addComponent(button_cancel))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        frame.setVisible(false);
        frame.setEnabled(false);
    }//GEN-LAST:event_button_cancelActionPerformed

    private boolean isTextFieldNotEmpty(JTextField field, JLabel label) {
        if (!field.getText().isEmpty()) {
            label.setForeground(Color.black);
            return true;
        } else {
            label.setForeground(Color.red);
            return false;
        }
    }

    private boolean areTextFieldsNotEmpty() {
        boolean result = true;
        result = isTextFieldNotEmpty(textfield_resource_type_id, label_resource_type_id) && result;
        result = isTextFieldNotEmpty(textfield_resource_type_name, label_resource_type_name) && result;
        result = isTextFieldNotEmpty(textfield_resource_type_nice_name, label_resource_type_nice_name) && result;
        result = isTextFieldNotEmpty(textfield_resource_type_title, label_resource_type_title) && result;
        result = isTextFieldNotEmpty(textfield_resource_type_description, label_resource_type_description) && result;
        result = isTextFieldNotEmpty(textfield_schema_type_name, label_schema_type_name) && result;
        this.updateUI();
        return result;
    }

    private void button_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveActionPerformed

        try {
            if (areTextFieldsNotEmpty()) {
                FileObject individualProp = projectDirectory.getFileObject("individual.properties");
                FileObject defaultProp = projectDirectory.getFileObject("default.properties");
                generateCmsShellScriptForNewResourceType(individualProp.getPath(), defaultProp.getPath());
                ActionUtils.runTarget(buildScript, new String[]{"build_new_resource_type"}, null);
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
                frame.setVisible(false);
                frame.setEnabled(false);
            }
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IllegalArgumentException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_button_saveActionPerformed

    private void button_iconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_iconActionPerformed
        final JFileChooser chooser = invokeFileChooser("Select icon for resource type", JFileChooser.FILES_ONLY);
        chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileChooserActionPerformed(chooser, textfield_icon, evt);
            }
        });
        chooser.showOpenDialog(chooser);
    }//GEN-LAST:event_button_iconActionPerformed

    private JFileChooser invokeFileChooser(String dialog, int selection_mode) {
        JFileChooser chooser = new JFileChooser();
        FileUtil.preventFileChooserSymlinkTraversal(chooser, null);
        chooser.setDialogTitle(dialog);
        chooser.setFileSelectionMode(selection_mode);
        return chooser;
    }

    private void addFileChooserActionPerformed(JFileChooser chooser, JTextField textfield, java.awt.event.ActionEvent evt) {
        if (evt.getActionCommand().equalsIgnoreCase("ApproveSelection")) {
            setSelectedFileAsPathInTextField(chooser, textfield);
        }
    }

    private void setSelectedFileAsPathInTextField(JFileChooser chooser, JTextField textfield) {
        File dir = chooser.getSelectedFile();
        String path = FileUtil.normalizeFile(dir).getAbsolutePath();
        path = path.replace("\\", "/");
        textfield.setText(path);
        textfield.updateUI();
        this.updateUI();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_icon;
    private javax.swing.JButton button_save;
    private javax.swing.JLabel label_icon;
    private javax.swing.JLabel label_resource_type_description;
    private javax.swing.JLabel label_resource_type_id;
    private javax.swing.JLabel label_resource_type_name;
    private javax.swing.JLabel label_resource_type_nice_name;
    private javax.swing.JLabel label_resource_type_title;
    private javax.swing.JLabel label_schema_type_name;
    private javax.swing.JTextField textfield_icon;
    private javax.swing.JTextField textfield_resource_type_description;
    private javax.swing.JTextField textfield_resource_type_id;
    private javax.swing.JTextField textfield_resource_type_name;
    private javax.swing.JTextField textfield_resource_type_nice_name;
    private javax.swing.JTextField textfield_resource_type_title;
    private javax.swing.JTextField textfield_schema_type_name;
    // End of variables declaration//GEN-END:variables
}
